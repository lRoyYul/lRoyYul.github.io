---
title: "Study 1"
format: 
  dashboard:
    orientation: rows
---

# Task B&C

```{r}
library(readr) 
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
library(purrr)
library(jsonlite)
```

```{r}
df <- read_csv("data/tmdb_5000_movies.csv", show_col_types = FALSE)
df <- df |>
  mutate(
    release_date_parsed = suppressWarnings(ymd(release_date)),
    release_decade = case_when(
      year(release_date_parsed) >= 1980 & year(release_date_parsed) < 1990 ~ "1980s",
      year(release_date_parsed) >= 1990 & year(release_date_parsed) < 2000 ~ "1990s",
      year(release_date_parsed) >= 2000 & year(release_date_parsed) < 2010 ~ "2000s",
      year(release_date_parsed) >= 2010 & year(release_date_parsed) < 2020 ~ "2010s",
      year(release_date_parsed) >= 2020 & year(release_date_parsed) < 2030 ~ "2020s",
      TRUE ~ NA_character_
      ),
     english_group = ifelse(
      !is.na(original_language) & tolower(original_language) == "en",
      "English", "Non-English"
      )
  ) 

df_filter <- df |>
  filter(
    !is.na(release_date_parsed),
    !is.na(genres), genres != "", genres != "[]",
    !is.na(revenue), revenue >= 0,
    !is.na(budget),  budget  >= 0,
    !is.na(vote_average), vote_average >= 0, vote_average <= 10
  )
```

## Row

### {.tabset}

#### Welch t test

```{r}
b_ttest <- t.test(
  vote_average ~ english_group,
  data = df_filter,
  conf.level = 0.90
)
b_ttest
```

#### group summary

```{r}
df_filter |>
  group_by(english_group) |>
  summarize(
    n   = n(),
    mean = mean(vote_average),
    sd   = sd(vote_average),
    .groups = "drop"
  )
```

#### density plot

```{r}
df_filter |>
  ggplot(aes(vote_average, fill = english_group)) +
  geom_density(alpha = 0.35) +
  labs(x = "Vote Average", y = "Density", fill = "Group")
```

### Column 
**What you’re seeing**

We compare mean user ratings between English and Non-English films with a Welch two-sample t-test (90% CI).

**How to read it**

If the 90% CI for (English − Non-English) excludes 0, the group means differ credibly. The density plot shows where each group’s ratings concentrate.

**Takeaway**

Ratings differences are modest in size but can be statistically meaningful. Direction = sign of the mean difference; magnitude ≈ fraction of a rating point (0–10 scale).

## Row

### {.tabset}

#### graph

```{r}
df_c <- df_filter |>
  mutate(log_revenue = log1p(revenue)) |>
  filter(!is.na(release_decade)) |>
  group_by(release_decade) |>
  mutate(n_decade = n()) |>
  ungroup() 

df_c |>
  ggplot(aes(x = release_decade, y = log_revenue)) +
  geom_boxplot() +
  labs(x = "Release decade", y = "log(Revenue + 1)",
       title = "Distribution of log(Revenue+1) by decade")
```

#### summary

```{r}
df_c |>
  count(release_decade, sort = TRUE)
```

#### ANOVA& Tukey

```{r}

fit_c <- aov(log_revenue ~ release_decade, data = df_c)
summary(fit_c)

TukeyHSD(fit_c, conf.level = 0.90)

tbl_c <- df_c |>
  group_by(release_decade) |>
  summarize(
    n    = n(),
    mean = mean(log_revenue),
    sd   = sd(log_revenue),
    .groups = "drop"
  )
tbl_c
```

### Column 
**What you’re seeing**

Boxplots of log(Revenue+1) by decade, followed by a one-way ANOVA and Tukey 90% CIs for pairwise contrasts.

**How to read it**

ANOVA tells you whether any decade means differ. Tukey intervals show which pairs differ; intervals not crossing 0 indicate a credible gap and the sign shows which decade is higher.


**Takeaway**
Revenue levels on the log scale shift across decades. Use Tukey results to pinpoint the decades driving the difference.

# Task D&E

## Task d

### {.tabset}

#### summary

```{r}
df_d <- df_filter |>
  filter(!is.na(english_group)) |>
  mutate(profit = as.integer(revenue >2.4* budget)) |>
  select(english_group, profit)

tab_wide <- df_d |>
  mutate(english_group = factor(english_group, levels = c("English","Non-English"))) |>
  count(english_group, profit) |>
  pivot_wider(names_from = profit, values_from = n, values_fill = 0) |>
  rename(not_profit = `0`, profit = `1`) |>
  arrange(english_group)

tab_wide 
```

#### test

```{r}

a <- tab_wide |> filter(english_group == "English")     |> pull(profit)
b <- tab_wide |> filter(english_group == "English")     |> pull(not_profit)
c <- tab_wide |> filter(english_group == "Non-English") |> pull(profit)
d <- tab_wide |> filter(english_group == "Non-English") |> pull(not_profit)


c(a=a, b=b, c=c, d=d)


p1 <- a/(a+b)  
p2 <- c/(c+d)   

rd_test <- prop.test(x = c(a,c), n = c(a+b, c+d), conf.level = 0.90, correct = TRUE)
rd_est  <- unname(p1 - p2)
rd_ci   <- unname(rd_test$conf.int)

RR <- p1/p2
se_logRR <- sqrt(1/a - 1/(a+b) + 1/c - 1/(c+d))
z <- qnorm(0.95)  
RR_ci <- exp(log(RR) + c(-1,1)*z*se_logRR)

or_test <- fisher.test(matrix(c(a,b,c,d), nrow = 2), conf.level = 0.90)
OR <- unname(or_test$estimate)
OR_ci <- unname(or_test$conf.int)

tibble::tibble(
  metric   = c("Risk_English (p1)", "Risk_NonEnglish (p2)", "RD = p1 - p2", "RR = p1/p2", "OR"),
  estimate = c(p1, p2, rd_est, RR, OR),
  ci90_lwr = c(NA, NA, rd_ci[1], RR_ci[1], OR_ci[1]),
  ci90_upr = c(NA, NA, rd_ci[2], RR_ci[2], OR_ci[2])
)
```

#### proportion graph

```{r}
df_d |>
  mutate(profit = factor(profit, levels = c(0,1), labels = c("Not profit","Profit"))) |>
  count(english_group, profit) |>
  group_by(english_group) |>
  mutate(pct = n / sum(n)) |>
  ungroup() |>
  ggplot(aes(x = english_group, y = pct, fill = profit)) +
  geom_col(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  labs(x = "Group", y = "Share", fill = "", 
       title = "Profit vs Not profit proportion by group")

```

### Column

This block evaluates whether profitability differs by language using a 2×2 table with profit = I(revenue \> budget) as the outcome and english_group as the exposure. We report three effect measures with 90% confidence intervals—risk difference (RD), relative risk (RR), and odds ratio (OR). A 90% CI for RD that excludes zero (and RR/OR intervals that exceed one) indicates English-language films have a credibly higher probability of being profitable; if the intervals include the null values, the data do not provide sufficient evidence of a difference at the 90% level.

## Row {height=50%}

### {.tabset}

#### heatmap

```{r}
top_k <- 5

safe_parse_genres <- function(s) {
  if (is.na(s) || s == "" || s == "[]") return(list())
  out <- tryCatch(jsonlite::fromJSON(s), error = function(e) NULL)
  if (is.null(out)) return(list())
  if (is.data.frame(out) && "name" %in% names(out)) {
    as.character(out$name)
  } else if (is.list(out)) {
    unlist(lapply(out, function(x) tryCatch(as.character(x$name), error = function(e) NA_character_)), use.names = FALSE)
  } else character()
}

df_gen_long <- df_filter |>
  filter(!is.na(release_decade)) |>
  mutate(genres_vec = purrr::map(genres, safe_parse_genres)) |>
  tidyr::unnest_longer(genres_vec, values_to = "genre") |>
  filter(!is.na(genre), genre != "")

top_genres <- df_gen_long |>
  count(genre, sort = TRUE) |>
  slice_head(n = top_k) |>
  pull(genre)

heat_rev_mean <- df_gen_long |>
  filter(genre %in% top_genres) |>
  mutate(
    release_decade = factor(release_decade, levels = c("1980s","1990s","2000s","2010s","2020s")),
    log_revenue = log1p(revenue)
  ) |>
  group_by(release_decade, genre) |>
  summarize(mean_log_rev = mean(log_revenue), .groups = "drop")

heat_rev_mean |>
  ggplot(aes(x = release_decade, y = genre, fill = mean_log_rev)) +
  geom_tile() +
  labs(x = "Decade", y = "Genre (TopK)",
       fill = "Mean log(Rev+1)",
       title = "Mean log(Revenue+1) by decade × genre")

xtab_counts <- df_gen_long |>
  filter(genre %in% top_genres) |>
  count(release_decade, genre) |>
  tidyr::pivot_wider(names_from = genre, values_from = n, values_fill = 0) |>
  arrange(factor(release_decade, levels = c("1980s","1990s","2000s","2010s","2020s")))
```

#### Counts table

```{r}
xtab_counts  
```

#### Row wise

```{r}

xtab_rowprop <- xtab_counts |>
  tibble::column_to_rownames("release_decade") |>
  as.matrix() |>
  prop.table(margin = 1) |>
  as.data.frame() |>
  tibble::rownames_to_column("release_decade")

xtab_rowprop 

mat_counts <- xtab_counts |>
  tibble::column_to_rownames("release_decade") |>
  as.matrix()

chisq_res <- chisq.test(mat_counts) 
```

### Column

This chunk converts multi-label genres to long form (each film counted under all its tags), selects Top-K genres by overall frequency, and draws a heatmap of mean log(Revenue+1) for each decade × genre cell—darker tiles indicate higher averages. A follow-up cross-tab with row-wise proportions shows that genre mix shifts across decades, and a Pearson chi-square on the counts rejects independence, implying composition changes over time. Because the heatmap summarizes means (not counts) and films appear under multiple tags, treat these patterns as descriptive, not causal or mutually exclusive.
